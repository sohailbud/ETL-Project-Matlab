function MarketCrossReferencebyCounty = importMarketCrossRef(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as a matrix.
%   MARKETCROSSREFERENCEBYCOUNTY = IMPORTFILE(FILENAME) Reads data from
%   text file FILENAME for the default selection.
%
%   MARKETCROSSREFERENCEBYCOUNTY = IMPORTFILE(FILENAME, STARTROW, ENDROW)
%   Reads data from rows STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   MarketCrossReferencebyCounty =
%   importfile('MarketCrossReferencebyCounty.csv', 2, 13029);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2014/08/25 16:30:57

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: text (%s)
%	column6: text (%s)
%   column7: text (%s)
%	column8: double (%f)
%   column9: text (%s)
%	column10: double (%f)
%   column11: text (%s)
%	column12: double (%f)
%   column13: text (%s)
%	column14: text (%s)
%   column15: text (%s)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
%   column23: double (%f)
%	column24: double (%f)
%   column25: double (%f)
%	column26: double (%f)
%   column27: double (%f)
%	column28: double (%f)
%   column29: double (%f)
%	column30: double (%f)
%   column31: double (%f)
%	column32: double (%f)
%   column33: double (%f)
%	column34: double (%f)
%   column35: double (%f)
%	column36: double (%f)
%   column37: double (%f)
%	column38: double (%f)
%   column39: double (%f)
%	column40: double (%f)
%   column41: double (%f)
%	column42: double (%f)
%   column43: double (%f)
%	column44: double (%f)
%   column45: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%s%s%s%f%s%f%s%f%s%s%s%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Create output variable
MarketCrossReferencebyCounty = table(dataArray{1:end-1}, 'VariableNames', {'CAL_YR_MTH','ST_CNTY_FIPS_CD','ST_FIPS_CD','CNTY_FIPS_CD','CNTY_NAME','STATE_CD','STATE_NAME','DMA_CD','DMA_MKT_NAME','CBSA_CD','CBSA_MKT_NAME','TERRITORY_CODE','TERRITORY_NAME','MARKET_NAME','MARKET_CODE','REGION_NAME','REGION_CODE','HUM_MKTS_PER_CNTY','TTL_ELIGIBLE','EST_TTL_ELIGIBLE_PER_HUM_MKT','TTL_STATE_ELIGIBLE','TTL_DMA_ELIGIBLE','TTL_CBSA_ELIGIBLE','TTL_TERRITORY_ELIGIBLE','TTL_MARKET_ELIGIBLE','TTL_REGION_ELIGIBLE','PCT_OF_STATE','PCT_OF_DMA','PCT_OF_CBSA','PCT_OF_TERRITORY','PCT_OF_MARKET','PCT_OF_REGION','CNT_CNTY_MA_CONTRACTS','CNT_CNTY_PDP_CONTRACTS','CNT_CNTY_MA_CARRIERS','CNT_CNTY_PDP_CARRIERS','TTL_CNTY_ENROLLED','TTL_CNTY_MA_MAPD','TTL_CNTY_PDP','HUM_CNTY_ENROLLED','HUM_CNTY_MA_MAPD','HUM_CNTY_PDP','OTH_CNTY_ENROLLED','OTH_CNTY_MA_MAPD','OTH_CNTY_PDP'});
